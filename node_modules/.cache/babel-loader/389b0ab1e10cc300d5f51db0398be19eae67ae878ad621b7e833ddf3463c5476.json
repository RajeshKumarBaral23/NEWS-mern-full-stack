{"ast":null,"code":"var _jsxFileName = \"C:\\\\FarmRipe\\\\NEWS-mern-full-stack\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register({\n  onSuccess,\n  setRegisterError\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send a POST request to the backend for user registration\n      const response = await fetch('http://localhost:3000/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n\n      // Check if the response is OK\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.message === 'User registered successfully') {\n        // Call the onSuccess function passed as a prop\n        onSuccess();\n      } else {\n        // If the registration fails, show the error message\n        setRegisterError(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      // Log the error and show a generic error message\n      console.error('Error during registration:', error);\n      setRegisterError('Registration failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"y7AVIb+2dT29WONRxO7d74XBSmc=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","onSuccess","setRegisterError","_s","name","setName","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","message","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/FarmRipe/NEWS-mern-full-stack/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Register({ onSuccess, setRegisterError }) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Send a POST request to the backend for user registration\n      const response = await fetch('http://localhost:3000/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email, password }),\n      });\n\n      // Check if the response is OK\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (data.message === 'User registered successfully') {\n        // Call the onSuccess function passed as a prop\n        onSuccess();\n      } else {\n        // If the registration fails, show the error message\n        setRegisterError(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      // Log the error and show a generic error message\n      console.error('Error during registration:', error);\n      setRegisterError('Registration failed. Please try again.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Register</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n}\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}